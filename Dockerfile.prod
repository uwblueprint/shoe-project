############################
# STEP 1 build executable binary
############################
FROM golang:alpine AS builder

RUN apk add --update nodejs yarn util-linux libcap

ENV PORT=8080
ENV USER=appuser
ENV UID=10001

RUN setcap 'cap_net_bind_service=+ep' /app/croc-hunter
# See https://stackoverflow.com/a/55757473/12429735RUN
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"

WORKDIR /app
COPY . .
RUN setcap 'cap_net_bind_service=+ep' /app

# fetch dependencies
RUN go mod download
RUN go mod verify
RUN cd ui && yarn && yarn build-prod

# build
RUN go build -ldflags="-w -s" -o /go/bin/shoe-project

#############################
## STEP 2 build a small image
#############################
FROM alpine

# import the user and group files from the builder.
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group

# copy our static executable.
COPY --from=builder /go/bin/shoe-project /go/bin/shoe-project
# copy our dist build
COPY --from=builder /app/ui/dist /go/bin/ui/dist

# use an unprivileged user.
USER appuser:appuser

EXPOSE ${PORT}
ENTRYPOINT ["/go/bin/shoe-project", "server"]
